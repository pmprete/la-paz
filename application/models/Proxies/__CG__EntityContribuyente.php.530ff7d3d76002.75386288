<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Contribuyente extends \Entity\Contribuyente implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function onPrePersist()
    {
        $this->__load();
        return parent::onPrePersist();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function addDeuda(\Entity\Deuda $deuda)
    {
        $this->__load();
        return parent::addDeuda($deuda);
    }

    public function getDeudas()
    {
        $this->__load();
        return parent::getDeudas();
    }

    public function setCuit($cuit)
    {
        $this->__load();
        return parent::setCuit($cuit);
    }

    public function getCuit()
    {
        $this->__load();
        return parent::getCuit();
    }

    public function setTelefonoMovil($telefono_movil)
    {
        $this->__load();
        return parent::setTelefonoMovil($telefono_movil);
    }

    public function getTelefonoMovil()
    {
        $this->__load();
        return parent::getTelefonoMovil();
    }

    public function setTelefonoFijo($telefono_fijo)
    {
        $this->__load();
        return parent::setTelefonoFijo($telefono_fijo);
    }

    public function getTelefonoFijo()
    {
        $this->__load();
        return parent::getTelefonoFijo();
    }

    public function setPiso($piso)
    {
        $this->__load();
        return parent::setPiso($piso);
    }

    public function getPiso()
    {
        $this->__load();
        return parent::getPiso();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setCalle($calle)
    {
        $this->__load();
        return parent::setCalle($calle);
    }

    public function getCalle()
    {
        $this->__load();
        return parent::getCalle();
    }

    public function setAltura($altura)
    {
        $this->__load();
        return parent::setAltura($altura);
    }

    public function getAltura()
    {
        $this->__load();
        return parent::getAltura();
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nombre', 'cuit', 'calle', 'altura', 'piso', 'telefono_fijo', 'telefono_movil', 'created_on', 'deudas', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}